/* すべての要素に対して box-sizing: border-box; を指定してください */
*{
  box-sizing:border-box;
}

.container {
  margin: 20px;
}

.item {
  width: 25%;
  float: left;
  /* 左右にpaddingを15pxずつ追加してください */
  padding:0 15px;
  
}


.item-box {
  height: 100px;
  margin-bottom: 20px;
}

.green {
  background-color: #11D8B3;
}

.yellow {
  background-color: #FFD466;
}

.red {
  background-color: #ED456D;
}

.blue {
  background-color: #3D7DD8;
}

/* タブレット向けレイアウト */
/* ブレイクポイントをmax-width: 1000pxに指定してください */
@media(max-width:1000px){
  .item{
    width:50%;
  }
}



/* スマートフォン向けレイアウト */
/* ブレイクポイントをmax-width: 670pxに指定してください */
@media(max-width:670px){
  .item{
    width:100%;
  }
}



/*
メディアクエリは、@media (条件) { .... }という様に書きます。
指定された条件が当てはまるときにのみ{ }内のCSSが適用されます。
メディアクエリの条件には、max-width(最大幅)、またはmin-width(最小幅)を指定できます。
*/

/*
box-sizingをborder-boxに指定すると、要素の幅(width)の合計にpaddingとborderが含まれるようになります。
そのため、paddingやborderを追加した時に生じるレイアウト崩れを未然に防ぐことができます
（※ただし、marginはborder-boxでの合計値に含まれません）。
*/

/*
*はすべての要素に対してCSSを適用したい場合に用います。
border-boxをすべての要素に対して適用することで、レイアウトを管理しやすくなります。
*/

/*
レスポンシブデザインを適用する準備として、<head>タグ内にviewportを設定しましょう。
viewportを設定しないと、スマートフォンやタブレットでの閲覧時にメディアクエリが正しく機能しません。
<meta name="viewport" content="width=device-width, initial-scale=1.0">
*/


/*
画面幅によって全体のwidthが変わるように、width: 100%;に変更しましょう。
*/

